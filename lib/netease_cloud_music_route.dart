// GENERATED CODE - DO NOT MODIFY MANUALLY
// **************************************************************************
// Auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************

import 'package:flutter/widgets.dart';

import 'screens/audio/audio_player_screen.dart';
import 'screens/audio/song_comment.dart';
import 'screens/daily_recommend/daily_recommend_screen.dart';
import 'screens/events/event_detail_screen.dart';
import 'screens/events/events_screen.dart';
import 'screens/home/home_screen.dart';
import 'screens/login/login_screen.dart';
import 'screens/playlist/play_list_description.dart';
import 'screens/playlist/play_list_detail_screen.dart';
import 'screens/playlist/play_list_ground_screen.dart';
import 'screens/playlist/subscriber_screen.dart';
import 'screens/rank/rank_list_screen.dart';
import 'screens/search/search_screens.dart';
import 'screens/splash_screen.dart';
import 'screens/user_center/user_center_screen.dart';

RouteResult getRouteResult({String name, Map<String, dynamic> arguments}) {
  switch (name) {
    case 'neteasecloudmusic://audioplayerscreen':
      return RouteResult(
        widget: AudioPlayerScreen(),
        routeName: 'DailyRecommendScreen',
        pageRouteType: PageRouteType.material,
        description: '播放歌曲页面',
      );
    case 'neteasecloudmusic://dailyrecommendscreen':
      return RouteResult(
        widget: DailyRecommendScreen(),
        routeName: 'DailyRecommendScreen',
        pageRouteType: PageRouteType.material,
        description: '日常推荐歌曲',
      );
    case 'neteasecloudmusic://eventdetailscreen':
      return RouteResult(
        widget: EventDetailScreen(
          event: arguments['event'],
        ),
        routeName: 'EventDetailScreen',
        pageRouteType: PageRouteType.material,
        description: '云村动态详情界面,event是具体详情内容',
      );
    case 'neteasecloudmusic://eventscreen':
      return RouteResult(
        widget: EventsScreen(),
        routeName: 'EventScreen',
        pageRouteType: PageRouteType.material,
        description: '云村动态界面,用于查看用户动态',
      );
    case 'neteasecloudmusic://homescreen':
      return RouteResult(
        widget: HomeScreen(
          model: arguments['model'],
        ),
        routeName: 'HomeScreen',
        pageRouteType: PageRouteType.transparent,
        description: '登录成功之后主页面，接收的model参数是用于判断视频播放状态',
      );
    case 'neteasecloudmusic://loginscreen':
      return RouteResult(
        widget: LoginScreen(),
        routeName: 'LoginScreen',
        pageRouteType: PageRouteType.transparent,
        description: '登录界面',
      );
    case 'neteasecloudmusic://playlistdetaildescription':
      return RouteResult(
        widget: PlayListDescription(
          bgColor: arguments['bgColor'],
          detail: arguments['detail'],
        ),
        routeName: 'PlayListDetailDescription',
        pageRouteType: PageRouteType.material,
        description: '歌单详情描述,bgColor是用来设置背景模糊曾颜色,detail则是详情描述内容',
      );
    case 'neteasecloudmusic://playlistdetailscreen':
      return RouteResult(
        widget: PlayListDetailScreen(
          expandedHeight: arguments['expandedHeight'],
          id: arguments['id'],
          official: arguments['official'],
        ),
        routeName: 'PlayListDetailScreen',
        pageRouteType: PageRouteType.material,
        description:
            '歌单详情界面,expandedHeight是给定一个详情界面头部高度,official是用来判断是否为官方歌单，官方歌单界面与普通有所不同所以需要加以判断',
      );
    case 'neteasecloudmusic://playlistgroundscreen':
      return RouteResult(
        widget: PlayListGroundScreen(
          tagList: arguments['tagList'],
        ),
        routeName: 'PlayListGroundScreen',
        pageRouteType: PageRouteType.material,
        description: '全部歌单界面,tagList为歌单类型，在首页提前加载',
      );
    case 'neteasecloudmusic://ranklistscreen':
      return RouteResult(
        widget: RankListScreen(),
        routeName: 'SubscriberScreen',
        pageRouteType: PageRouteType.material,
        description: '排行榜列表',
      );
    case 'neteasecloudmusic://searchscreen':
      return RouteResult(
        widget: SearchScreens(),
        routeName: 'SearchScreen',
        pageRouteType: PageRouteType.material,
        description: '搜索界面,由首页和详情页组成',
      );
    case 'neteasecloudmusic://songcomment':
      return RouteResult(
        widget: SongComment(
          songModel: arguments['songModel'],
        ),
        routeName: 'DailyRecommendScreen',
        pageRouteType: PageRouteType.transparent,
        description: '歌曲评论页面,参数songModel主要是获取里面的评论信息',
      );
    case 'neteasecloudmusic://splashscreen':
      return RouteResult(
        widget: SplashScreen(
          videoModel: arguments['videoModel'],
          userModel: arguments['userModel'],
        ),
        routeName: 'SplashScreen',
        pageRouteType: PageRouteType.transparent,
        description: 'videoModel提前获取值让homescreen中使用,userModel判断当前用户是否有登录',
      );
    case 'neteasecloudmusic://suscriberscreen':
      return RouteResult(
        widget: SubscriberScreen(),
        routeName: 'SubscriberScreen',
        pageRouteType: PageRouteType.material,
        description: '收藏者列表',
      );
    case 'neteasecloudmusic://usercenterscreen':
      return RouteResult(
        widget: UserCenterScreen(),
        routeName: 'UserCenterScreen',
        pageRouteType: PageRouteType.material,
        description: '用户中心，查看用户当前信息以及歌单',
      );
    default:
      return const RouteResult();
  }
}

class RouteResult {
  const RouteResult({
    this.widget,
    this.showStatusBar = true,
    this.routeName = '',
    this.pageRouteType,
    this.description = '',
  });

  /// The Widget return base on route
  final Widget widget;

  /// Whether show this route with status bar.
  final bool showStatusBar;

  /// The route name to track page
  final String routeName;

  /// The type of page route
  final PageRouteType pageRouteType;

  /// The description of route
  final String description;
}

enum PageRouteType { material, cupertino, transparent }

class Routes {
  const Routes._();

  /// "播放歌曲页面"
  ///
  /// [name] : neteasecloudmusic://audioplayerscreen
  /// [routeName] : DailyRecommendScreen
  /// [description] : "播放歌曲页面"
  /// [pageRouteType] : PageRouteType.material
  static const String NETEASECLOUDMUSIC_AUDIOPLAYERSCREEN =
      'neteasecloudmusic://audioplayerscreen';

  /// "日常推荐歌曲"
  ///
  /// [name] : neteasecloudmusic://dailyrecommendscreen
  /// [routeName] : DailyRecommendScreen
  /// [description] : "日常推荐歌曲"
  /// [pageRouteType] : PageRouteType.material
  static const String NETEASECLOUDMUSIC_DAILYRECOMMENDSCREEN =
      'neteasecloudmusic://dailyrecommendscreen';

  /// "云村动态详情界面,event是具体详情内容"
  ///
  /// [name] : neteasecloudmusic://eventdetailscreen
  /// [routeName] : EventDetailScreen
  /// [description] : "云村动态详情界面,event是具体详情内容"
  /// [arguments] : [event]
  /// [pageRouteType] : PageRouteType.material
  static const String NETEASECLOUDMUSIC_EVENTDETAILSCREEN =
      'neteasecloudmusic://eventdetailscreen';

  /// "云村动态界面,用于查看用户动态"
  ///
  /// [name] : neteasecloudmusic://eventscreen
  /// [routeName] : EventScreen
  /// [description] : "云村动态界面,用于查看用户动态"
  /// [pageRouteType] : PageRouteType.material
  static const String NETEASECLOUDMUSIC_EVENTSCREEN =
      'neteasecloudmusic://eventscreen';

  /// "登录成功之后主页面，接收的model参数是用于判断视频播放状态"
  ///
  /// [name] : neteasecloudmusic://homescreen
  /// [routeName] : HomeScreen
  /// [description] : "登录成功之后主页面，接收的model参数是用于判断视频播放状态"
  /// [arguments] : [model]
  /// [pageRouteType] : PageRouteType.transparent
  static const String NETEASECLOUDMUSIC_HOMESCREEN =
      'neteasecloudmusic://homescreen';

  /// "登录界面"
  ///
  /// [name] : neteasecloudmusic://loginscreen
  /// [routeName] : LoginScreen
  /// [description] : "登录界面"
  /// [pageRouteType] : PageRouteType.transparent
  static const String NETEASECLOUDMUSIC_LOGINSCREEN =
      'neteasecloudmusic://loginscreen';

  /// "歌单详情描述,bgColor是用来设置背景模糊曾颜色,detail则是详情描述内容"
  ///
  /// [name] : neteasecloudmusic://playlistdetaildescription
  /// [routeName] : PlayListDetailDescription
  /// [description] : "歌单详情描述,bgColor是用来设置背景模糊曾颜色,detail则是详情描述内容"
  /// [arguments] : [bgColor, detail]
  /// [pageRouteType] : PageRouteType.material
  static const String NETEASECLOUDMUSIC_PLAYLISTDETAILDESCRIPTION =
      'neteasecloudmusic://playlistdetaildescription';

  /// "歌单详情界面,expandedHeight是给定一个详情界面头部高度,official是用来判断是否为官方歌单，官方歌单界面与普通有所不同所以需要加以判断"
  ///
  /// [name] : neteasecloudmusic://playlistdetailscreen
  /// [routeName] : PlayListDetailScreen
  /// [description] : "歌单详情界面,expandedHeight是给定一个详情界面头部高度,official是用来判断是否为官方歌单，官方歌单界面与普通有所不同所以需要加以判断"
  /// [arguments] : [expandedHeight, id, official]
  /// [pageRouteType] : PageRouteType.material
  static const String NETEASECLOUDMUSIC_PLAYLISTDETAILSCREEN =
      'neteasecloudmusic://playlistdetailscreen';

  /// "全部歌单界面,tagList为歌单类型，在首页提前加载"
  ///
  /// [name] : neteasecloudmusic://playlistgroundscreen
  /// [routeName] : PlayListGroundScreen
  /// [description] : "全部歌单界面,tagList为歌单类型，在首页提前加载"
  /// [arguments] : [tagList]
  /// [pageRouteType] : PageRouteType.material
  static const String NETEASECLOUDMUSIC_PLAYLISTGROUNDSCREEN =
      'neteasecloudmusic://playlistgroundscreen';

  /// "排行榜列表"
  ///
  /// [name] : neteasecloudmusic://ranklistscreen
  /// [routeName] : SubscriberScreen
  /// [description] : "排行榜列表"
  /// [pageRouteType] : PageRouteType.material
  static const String NETEASECLOUDMUSIC_RANKLISTSCREEN =
      'neteasecloudmusic://ranklistscreen';

  /// "搜索界面,由首页和详情页组成"
  ///
  /// [name] : neteasecloudmusic://searchscreen
  /// [routeName] : SearchScreen
  /// [description] : "搜索界面,由首页和详情页组成"
  /// [pageRouteType] : PageRouteType.material
  static const String NETEASECLOUDMUSIC_SEARCHSCREEN =
      'neteasecloudmusic://searchscreen';

  /// "歌曲评论页面,参数songModel主要是获取里面的评论信息"
  ///
  /// [name] : neteasecloudmusic://songcomment
  /// [routeName] : DailyRecommendScreen
  /// [description] : "歌曲评论页面,参数songModel主要是获取里面的评论信息"
  /// [arguments] : [songModel]
  /// [pageRouteType] : PageRouteType.transparent
  static const String NETEASECLOUDMUSIC_SONGCOMMENT =
      'neteasecloudmusic://songcomment';

  /// "videoModel提前获取值让homescreen中使用,userModel判断当前用户是否有登录"
  ///
  /// [name] : neteasecloudmusic://splashscreen
  /// [routeName] : SplashScreen
  /// [description] : "videoModel提前获取值让homescreen中使用,userModel判断当前用户是否有登录"
  /// [arguments] : [videoModel, userModel]
  /// [pageRouteType] : PageRouteType.transparent
  static const String NETEASECLOUDMUSIC_SPLASHSCREEN =
      'neteasecloudmusic://splashscreen';

  /// "收藏者列表"
  ///
  /// [name] : neteasecloudmusic://suscriberscreen
  /// [routeName] : SubscriberScreen
  /// [description] : "收藏者列表"
  /// [pageRouteType] : PageRouteType.material
  static const String NETEASECLOUDMUSIC_SUSCRIBERSCREEN =
      'neteasecloudmusic://suscriberscreen';

  /// "用户中心，查看用户当前信息以及歌单"
  ///
  /// [name] : neteasecloudmusic://usercenterscreen
  /// [routeName] : UserCenterScreen
  /// [description] : "用户中心，查看用户当前信息以及歌单"
  /// [pageRouteType] : PageRouteType.material
  static const String NETEASECLOUDMUSIC_USERCENTERSCREEN =
      'neteasecloudmusic://usercenterscreen';
}
